╔══════════════════════════════════════════════════════════════════╗
║                                                                  ║
║     SOCIAL MEDIA CONTEST MANAGER - QUICK REFERENCE CARD          ║
║                                                                  ║
╚══════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────┐
│  🚀 STARTUP COMMANDS (Choose One)                                │
└──────────────────────────────────────────────────────────────────┘

  Full Automated Setup + Start:
  ┌────────────────────────────────────────────────────────────────┐
  │  ./start.sh              [macOS/Linux]                         │
  │  start.bat               [Windows]                             │
  │  npm run setup           [Alternative]                         │
  └────────────────────────────────────────────────────────────────┘
  
  What it does:
  ✓ Checks/Installs MongoDB
  ✓ Creates .env file
  ✓ Installs dependencies
  ✓ Starts MongoDB
  ✓ Seeds database (optional)
  ✓ Starts server

  Quick Setup Only (no server start):
  ┌────────────────────────────────────────────────────────────────┐
  │  ./setup.sh              [macOS/Linux]                         │
  └────────────────────────────────────────────────────────────────┘

  Manual Start (after setup):
  ┌────────────────────────────────────────────────────────────────┐
  │  npm start               [Production mode]                     │
  │  npm run dev             [Development mode with auto-restart]  │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  🛑 SHUTDOWN COMMANDS                                             │
└──────────────────────────────────────────────────────────────────┘

  Stop Server + MongoDB:
  ┌────────────────────────────────────────────────────────────────┐
  │  ./stop.sh               [macOS/Linux]                         │
  │  Ctrl + C                [Windows - in command window]         │
  │  npm run stop            [Alternative]                         │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  📊 DATABASE COMMANDS                                             │
└──────────────────────────────────────────────────────────────────┘

  Seed Sample Data (3 contests, 150 participants):
  ┌────────────────────────────────────────────────────────────────┐
  │  npm run seed                                                  │
  └────────────────────────────────────────────────────────────────┘

  Access MongoDB Shell:
  ┌────────────────────────────────────────────────────────────────┐
  │  mongosh contest_manager                                       │
  └────────────────────────────────────────────────────────────────┘

  View Collections in MongoDB:
  ┌────────────────────────────────────────────────────────────────┐
  │  show collections        # List all collections                │
  │  db.contests.find()      # View all contests                   │
  │  db.participants.find()  # View all participants               │
  │  db.dropDatabase()       # Reset database (careful!)           │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  🌐 ACCESS URLs                                                   │
└──────────────────────────────────────────────────────────────────┘

  Backend API:
  ┌────────────────────────────────────────────────────────────────┐
  │  http://localhost:3000/api                                     │
  │  http://localhost:3000/api/health      (health check)          │
  └────────────────────────────────────────────────────────────────┘

  Frontend Pages (open in browser):
  ┌────────────────────────────────────────────────────────────────┐
  │  frontend/index.html         Registration Form                 │
  │  frontend/dashboard.html     Analytics Dashboard               │
  │  frontend/admin.html         Admin Control Panel               │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  🔧 TROUBLESHOOTING                                               │
└──────────────────────────────────────────────────────────────────┘

  Port 3000 already in use:
  ┌────────────────────────────────────────────────────────────────┐
  │  lsof -ti:3000 | xargs kill -9    [macOS/Linux]               │
  │  netstat -ano | findstr :3000     [Windows - find PID]        │
  │  taskkill /PID <PID> /F           [Windows - kill process]    │
  └────────────────────────────────────────────────────────────────┘

  MongoDB won't start:
  ┌────────────────────────────────────────────────────────────────┐
  │  brew services restart mongodb-community  [macOS]              │
  │  sudo systemctl restart mongodb           [Linux]              │
  │  net start MongoDB                        [Windows]            │
  └────────────────────────────────────────────────────────────────┘

  Reset Everything:
  ┌────────────────────────────────────────────────────────────────┐
  │  rm -rf node_modules package-lock.json                         │
  │  npm cache clean --force                                       │
  │  npm install                                                   │
  └────────────────────────────────────────────────────────────────┘

  Database Connection Failed:
  ┌────────────────────────────────────────────────────────────────┐
  │  1. Check if MongoDB is running: pgrep mongod                  │
  │  2. Try connecting manually: mongosh                           │
  │  3. Check .env MONGODB_URI is correct                          │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  📋 COMMON API ENDPOINTS                                          │
└──────────────────────────────────────────────────────────────────┘

  Contests:
  ┌────────────────────────────────────────────────────────────────┐
  │  GET    /api/contests              List all contests           │
  │  POST   /api/contests              Create new contest          │
  │  GET    /api/contests/:id          Get contest details         │
  │  POST   /api/contests/:id/select-winners  Select winners       │
  └────────────────────────────────────────────────────────────────┘

  Participants:
  ┌────────────────────────────────────────────────────────────────┐
  │  POST   /api/participants/register     Register participant    │
  │  GET    /api/participants              List participants       │
  │  POST   /api/participants/bulk-qualify Bulk qualify            │
  └────────────────────────────────────────────────────────────────┘

  Analytics:
  ┌────────────────────────────────────────────────────────────────┐
  │  GET    /api/analytics/platform        Platform analytics      │
  │  GET    /api/analytics/fraud           Fraud detection report  │
  │  GET    /api/analytics/funnel          Engagement funnel       │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  📚 DOCUMENTATION FILES                                           │
└──────────────────────────────────────────────────────────────────┘

  ┌────────────────────────────────────────────────────────────────┐
  │  STARTUP_GUIDE.md        Complete startup documentation        │
  │  README.md               Technical documentation               │
  │  QUICKSTART.md           Quick setup guide                     │
  │  BUSINESS_REPORT.md      Algorithm explanations                │
  │  PROJECT_STRUCTURE.md    Architecture overview                 │
  │  API_SUMMARY.md          Project summary                       │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  ⚙️  CONFIGURATION                                                │
└──────────────────────────────────────────────────────────────────┘

  Environment File (.env):
  ┌────────────────────────────────────────────────────────────────┐
  │  PORT=3000                                                     │
  │  NODE_ENV=development                                          │
  │  MONGODB_URI=mongodb://localhost:27017/contest_manager         │
  │  JWT_SECRET=your_secret_key                                    │
  │  MAX_PARTICIPANTS_PER_CONTEST=10000                            │
  │  DEFAULT_NUMBER_OF_WINNERS=3                                   │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  🎯 PROJECT FEATURES                                              │
└──────────────────────────────────────────────────────────────────┘

  ✓ 5 Fairness Algorithms:
    • Pure Random (Fisher-Yates + crypto)
    • Weighted Random (engagement-based)
    • Priority-Based (heap + queue)
    • Time-Based (stratified sampling)
    • Hybrid (multi-criteria)

  ✓ Data Structures:
    • Priority Queue (Min-Heap) - O(log n)
    • Hash Table - O(1) duplicate detection
    • Graph (referral network)

  ✓ Security Features:
    • SHA-256 hashing
    • Fraud detection (0-100 score)
    • Rate limiting
    • Input validation

  ✓ Real-time Features:
    • Firebase integration
    • Live dashboard updates
    • Winner announcements


┌──────────────────────────────────────────────────────────────────┐
│  💾 SAMPLE DATA (from npm run seed)                               │
└──────────────────────────────────────────────────────────────────┘

  3 Contests:
  ┌────────────────────────────────────────────────────────────────┐
  │  1. Summer Giveaway (Active)       - 60 participants           │
  │  2. Tech Launch Contest (Active)   - 45 participants           │
  │  3. Influencer Contest (Completed) - 45 participants           │
  └────────────────────────────────────────────────────────────────┘

  150 Total Participants with:
  • Realistic names and emails
  • Various social media platforms
  • Different stages (Registered/Qualified/Finalist/Winner)
  • Engagement scores
  • Referral relationships


┌──────────────────────────────────────────────────────────────────┐
│  🚀 DEPLOYMENT                                                    │
└──────────────────────────────────────────────────────────────────┘

  For Production:
  ┌────────────────────────────────────────────────────────────────┐
  │  1. Update .env with production values                         │
  │  2. Use MongoDB Atlas (cloud database)                         │
  │  3. Deploy to: Heroku, Railway, AWS, or DigitalOcean          │
  │  4. Use PM2 for process management                             │
  │  5. Set up Nginx as reverse proxy                              │
  └────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────┐
│  📞 QUICK HELP                                                    │
└──────────────────────────────────────────────────────────────────┘

  If something goes wrong:
  ┌────────────────────────────────────────────────────────────────┐
  │  1. Check the terminal output for error messages               │
  │  2. Verify MongoDB is running: pgrep mongod                    │
  │  3. Check .env file exists and is configured                   │
  │  4. Try manual setup (see STARTUP_GUIDE.md)                    │
  │  5. Reset: rm -rf node_modules && npm install                  │
  └────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════╗
║                                                                  ║
║  MOST COMMON WORKFLOW                                            ║
║                                                                  ║
║  1. ./start.sh                  (first time - sets up everything)║
║  2. Say 'y' to seed database    (loads sample data)              ║
║  3. Server starts automatically                                  ║
║  4. Open frontend/index.html    (test registration)              ║
║  5. Open frontend/dashboard.html (view analytics)                ║
║  6. Open frontend/admin.html    (manage contests)                ║
║  7. Press Ctrl+C to stop        (when done)                      ║
║                                                                  ║
╚══════════════════════════════════════════════════════════════════╝


╔══════════════════════════════════════════════════════════════════╗
║                                                                  ║
║  SYSTEM REQUIREMENTS                                             ║
║                                                                  ║
║  • Node.js v14+                                                  ║
║  • MongoDB 4.4+                                                  ║
║  • 100MB disk space                                              ║
║  • macOS, Linux, or Windows                                      ║
║                                                                  ║
╚══════════════════════════════════════════════════════════════════╝

                          Print and keep handy! 📋
